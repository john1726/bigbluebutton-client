<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<EventMap xmlns="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">
	<!--
	This is the main event map for the application, think of it as the application controller.
	-->
	<EventHandlers type="{FlexEvent.APPLICATION_COMPLETE}">
		<!--
		The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
		-->
		<ObjectBuilder generator="{ModulesProxy}" cache="global" />
		<ObjectBuilder generator="{ConfigManager}" cache="global" />
		<ObjectBuilder generator="{ReconnectionManager}" cache="global" />
		<!--
		Disabling temporarily the stream monitor
		-->
		<!--ObjectBuilder generator="{StreamMonitor}" cache="global" /-->
	</EventHandlers>
	
	<EventHandlers type="{PortTestEvent.TEST_RTMP}" >
		<MethodInvoker generator="{ModulesProxy}" method="testRTMP" />
	</EventHandlers>

	<EventHandlers type="{PortTestEvent.PORT_TEST_SUCCESS}" >
		<MethodInvoker generator="{ModulesProxy}" method="portTestSuccess" arguments="{event.protocol}" />
	</EventHandlers>
	
	<EventHandlers type="{PortTestEvent.PORT_TEST_FAILED}" >
		<MethodInvoker generator="{ModulesProxy}" method="testRTMPT" arguments="{event.protocol}" />
	</EventHandlers>

  <EventHandlers type="{SuccessfulLoginEvent.USER_LOGGED_IN}" >
    <MethodInvoker generator="{ModulesProxy}" method="loadAllModules" arguments="{event.conferenceParameters}" />
  </EventHandlers>
  
	<EventHandlers type="{LogoutEvent.USER_LOGGED_OUT}" >
		<MethodInvoker generator="{ModulesProxy}" method="handleLogout" />
	</EventHandlers>
		
	<EventHandlers type="{ConfigEvent.CONFIG_EVENT}" >
		<MethodInvoker generator="{ConfigManager}" method="setConfig" arguments="{event.config}" />
		<MethodInvoker generator="{SkinningService}" method="loadSkins" arguments="{event.config.skinning}" />
	</EventHandlers>

	<EventHandlers type="{ModuleLoadEvent.START_ALL_MODULES}">
		<MethodInvoker generator="{ModulesProxy}" method="startLayoutModule" />
	</EventHandlers>

  <EventHandlers type="{ModuleLoadEvent.LAYOUT_MODULE_STARTED}">
    <MethodInvoker generator="{ModulesProxy}" method="startAllModules" />
  </EventHandlers>

  <EventHandlers type="{BBBEvent.RECONNECT_DISCONNECTED_EVENT}">
    <MethodInvoker generator="{ReconnectionManager}" method="onDisconnected" arguments="{[event.payload.type, event.payload.callback, event.payload.callbackParameters]}"/>
  </EventHandlers>

  <EventHandlers type="{BBBEvent.RECONNECT_CONNECTION_ATTEMPT_FAILED_EVENT}">
    <MethodInvoker generator="{ReconnectionManager}" method="onConnectionAttemptFailed" arguments="{event.payload.type}"/>
  </EventHandlers>

  <EventHandlers type="{BBBEvent.RECONNECT_CONNECTION_ATTEMPT_SUCCEEDED_EVENT}">
    <MethodInvoker generator="{ReconnectionManager}" method="onConnectionAttemptSucceeded" arguments="{event.payload.type}"/>
  </EventHandlers>

  <EventHandlers type="{BBBEvent.CANCEL_RECONNECTION_EVENT}">
    <MethodInvoker generator="{ReconnectionManager}" method="onCancelReconnection" />
  </EventHandlers>


  
	<mx:Script>
	<![CDATA[
    import mx.events.FlexEvent;
    
    import org.bigbluebutton.core.managers.ConfigManager;
    import org.bigbluebutton.core.managers.ReconnectionManager;
    import org.bigbluebutton.core.services.SkinningService;
    import org.bigbluebutton.main.events.BBBEvent;
    import org.bigbluebutton.main.events.ConfigEvent;
    import org.bigbluebutton.main.events.LogoutEvent;
    import org.bigbluebutton.main.events.ModuleLoadEvent;
    import org.bigbluebutton.main.events.PortTestEvent;
    import org.bigbluebutton.main.events.SuccessfulLoginEvent;
    import org.bigbluebutton.main.model.modules.ModulesProxy;
		
	]]>
	</mx:Script>
	
    <!-- ======================================================================================== -->
    <!-- Services   Note: you can have an external file if you have more services -->
    <!-- _________________________________________________________________________________________ -->
    
    <mx:HTTPService id="configService" url="conf/config.xml" resultFormat="e4x" />
	<mx:HTTPService id="joinService" url="conf/joinResultMock.xml" resultFormat="e4x" />	
</EventMap>
