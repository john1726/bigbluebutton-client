<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="http://mate.asfusion.com/" >
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.bigbluebutton.core.events.LockControlEvent;
			import org.bigbluebutton.core.events.VoiceConfEvent;
			import org.bigbluebutton.main.events.BBBEvent;
			import org.bigbluebutton.main.events.LogoutEvent;
			import org.bigbluebutton.main.events.TimerServicesEvent;
			import org.bigbluebutton.main.model.timer.TimerService;
			import org.bigbluebutton.main.model.timer.events.StartTimerEvent;
			import org.bigbluebutton.main.model.timer.events.StopTimerEvent;
		]]>
	</mx:Script>
	
	
	<EventHandlers type="{FlexEvent.APPLICATION_COMPLETE}" >
    <ObjectBuilder generator="{TimerService}" cache="global" />
	</EventHandlers>
	
  <EventHandlers type="{TimerServicesEvent.START_TIMER_SERVICES}" >
    <MethodInvoker generator="{TimerService}" method="startService" arguments="" />
  </EventHandlers>
  
  <!-- Viewers Stuff -->
  <EventHandlers type="{StartTimerEvent.START_TIMER}" >
    <MethodInvoker generator="{TimerService}" method="startTimer" arguments="" />
  </EventHandlers>
  
  <EventHandlers type="{StopTimerEvent.STOP_TIMER}" >
    <MethodInvoker generator="{TimerService}" method="stopTimer" arguments="" />
  </EventHandlers>
  <!-- End Viewers Stuff -->
  
</EventMap>
