<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="http://mate.asfusion.com/" xmlns:mate="org.bigbluebutton.common.mate.*">
	<mx:Script>
		<![CDATA[
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.main.events.ModuleStartedEvent;
      import org.bigbluebutton.modules.present.events.AddOverlayCanvasEvent;
      import org.bigbluebutton.modules.present.events.NavigationEvent;
      import org.bigbluebutton.modules.present.events.PageLoadedEvent;
      import org.bigbluebutton.modules.present.events.PresentationEvent;
      import org.bigbluebutton.modules.present.events.UploadEvent;
      import org.bigbluebutton.modules.present.events.WindowResizedEvent;
      import org.bigbluebutton.modules.whiteboard.commands.GetWhiteboardShapesCommand;
      import org.bigbluebutton.modules.whiteboard.events.PageEvent;
      import org.bigbluebutton.modules.whiteboard.events.StartWhiteboardModuleEvent;
      import org.bigbluebutton.modules.whiteboard.events.ToggleGridEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardButtonEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardDrawEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardPresenterEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardShapesEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardUpdate;
      import org.bigbluebutton.modules.whiteboard.managers.WhiteboardManager;
      import org.bigbluebutton.modules.whiteboard.models.WhiteboardModel;
      import org.bigbluebutton.modules.whiteboard.services.MessageReceiver;
      import org.bigbluebutton.modules.whiteboard.services.MessageSender;
      import org.bigbluebutton.modules.whiteboard.services.WhiteboardService;
      import org.bigbluebutton.modules.whiteboard.views.WhiteboardCanvas;
			
		]]>
	</mx:Script>
	
	
	<EventHandlers type="{WhiteboardPresenterEvent.MODIFY_ENABLED}" >
		<MethodInvoker generator="{WhiteboardService}" method="modifyEnabled" arguments="{event}" />
	</EventHandlers>
		
	<EventHandlers type="{PresentationEvent.PRESENTATION_LOADED}" >
		<MethodInvoker generator="{WhiteboardService}" method="setActivePresentation" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{StartWhiteboardModuleEvent.START_HIGHLIGHTER_MODULE_EVENT}">
		<MethodInvoker generator="{WhiteboardManager}" method="handleStartModuleEvent" />
	</EventHandlers>

    <EventHandlers type="{GetWhiteboardShapesCommand.GET_SHAPES}">
        <MethodInvoker generator="{WhiteboardService}" method="getAnnotationHistory" arguments="{event}"/>
    </EventHandlers>
    
	<EventHandlers type="{WhiteboardDrawEvent.CLEAR}" >
		<MethodInvoker generator="{WhiteboardService}" method="clearBoard" />
	</EventHandlers>
	
	<EventHandlers type="{WhiteboardDrawEvent.SEND_SHAPE}">
		<MethodInvoker generator="{WhiteboardService}" method="sendShape" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{WhiteboardDrawEvent.SEND_TEXT}">
		<MethodInvoker generator="{WhiteboardService}" method="sendText" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{WhiteboardDrawEvent.UNDO}" >
		<MethodInvoker generator="{WhiteboardService}" method="undoGraphic" />
	</EventHandlers>
	
	<EventHandlers type="{ToggleGridEvent.TOGGLE_GRID}" >
		<MethodInvoker generator="{WhiteboardService}" method="toggleGrid" />
	</EventHandlers>
					
	<EventHandlers type="{WhiteboardButtonEvent.WHITEBOARD_ADDED_TO_PRESENTATION}" >
		<MethodInvoker generator="{WhiteboardManager}" method="positionToolbar" arguments="{event}" />
	</EventHandlers>
	
    <EventHandlers type="{WhiteboardShapesEvent.SHAPES_EVENT}" >
        <MethodInvoker generator="{WhiteboardManager}" method="receivedAnnotationsHistory" arguments="{event}"/>
    </EventHandlers>
  
	<EventHandlers type="{WhiteboardUpdate.CLEAR_ANNOTATIONS}" >
		<MethodInvoker generator="{WhiteboardManager}" method="clearAnnotations"/>
	</EventHandlers>
  
	<EventHandlers type="{WhiteboardUpdate.BOARD_UPDATED}" >
		<MethodInvoker generator="{WhiteboardManager}" method="drawGraphic" arguments="{event}"/>
	</EventHandlers>
  
	<EventHandlers type="{WhiteboardUpdate.UNDO_ANNOTATION}" >
		<MethodInvoker generator="{WhiteboardManager}" method="undoAnnotation" arguments="{event}" />
	</EventHandlers>
  
	<EventHandlers type="{ToggleGridEvent.GRID_TOGGLED}" >
		<MethodInvoker generator="{WhiteboardManager}" method="toggleGrid"  arguments="{event}" />
	</EventHandlers>
  
	<EventHandlers type="{WhiteboardButtonEvent.ENABLE_WHITEBOARD}" >
		<MethodInvoker generator="{WhiteboardManager}" method="enableWhiteboard" arguments="{event}" />
	</EventHandlers>
  
	<EventHandlers type="{WhiteboardButtonEvent.DISABLE_WHITEBOARD}" >
		<MethodInvoker generator="{WhiteboardManager}" method="disableWhiteboard" arguments="{event}" />
	</EventHandlers>

  <EventHandlers type="{PageLoadedEvent.PAGE_LOADED_EVENT}" >
    <MethodInvoker generator="{WhiteboardManager}" method="handlePageChangedEvent" arguments="{event}" />
  </EventHandlers>
  
  <EventHandlers type="{BBBEvent.RECONNECT_BIGBLUEBUTTON_SUCCEEDED_EVENT}" >
    <MethodInvoker generator="{WhiteboardManager}" method="removeAnnotationsHistory" />
  </EventHandlers>
  
    <Injectors target="{WhiteboardManager}">
        <ObjectBuilder generator="{WhiteboardModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <PropertyInjector targetKey="whiteboardModel" source="{WhiteboardModel}"/>
    </Injectors>	
		
	<Injectors target="{WhiteboardService}">
		<PropertyInjector targetKey="receiver" source="{MessageReceiver}"/>
		<PropertyInjector targetKey="sender" source="{MessageSender}"/>
    <PropertyInjector targetKey="whiteboardModel" source="{WhiteboardModel}"/>
	</Injectors>
	
	<Injectors target="{MessageReceiver}">
		<ObjectBuilder generator="{WhiteboardModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
		<PropertyInjector targetKey="whiteboardModel" source="{WhiteboardModel}"/>
	</Injectors>		
</EventMap>
