<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 verticalAlign="top" verticalGap="0" paddingTop="0" paddingBottom="0"
		 verticalScrollPolicy="off" horizontalScrollPolicy="off"
		 xmlns:common="org.bigbluebutton.common.*">
	
	<mx:Script>
		<![CDATA[
			import mx.core.UITextField;
			import mx.core.mx_internal;
			
			import org.as3commons.logging.api.ILogger;
			import org.as3commons.logging.api.getClassLogger;
			
			private static const LOGGER:ILogger = getClassLogger(ChatMessageRenderer);      

			private function onLinkClick(e:TextEvent):void{
        LOGGER.debug("Clicked on link[{0}] from chat", [e.text]);
        if (ExternalInterface.available) {
          ExternalInterface.call("chatLinkClicked", e.text);
        } 
			}
			
			//private function dataChangeHandler(e:Event = null):void{
			override public function set data(value:Object):void {
				//if (data == null) {
				//	return;
				//}		
				super.data = value;
				
				//chatMsg = data as ChatMessage;
				//data = null;
				
				if (data == null) return;
				
				// The visibility check has to go here becasue ORs don't work with databinding
				lblTime.visible = (!(data.lastTime == data.time) || !(data.senderId == data.lastSenderId));
				// check the visibility of the name as well because events might fire in different order
				lblName.visible = !(data.senderId == data.lastSenderId);
				
				//remove the header if not needed to save space
				hbHeader.includeInLayout = hbHeader.visible = lblName.visible || lblTime.visible;
				
				// adjust the name width so that "..." are added if it's too long
				lblName.width = this.width - lblTime.width - 22;
				
				// If you remove this some of the chat messages will fail to render
				validateNow();
			}
			
			private function onKeyDown(event:KeyboardEvent):void{
				if(event.ctrlKey == true && event.keyCode == Keyboard.C){
					System.setClipboard(UITextField(txtMessage.mx_internal::getTextField()).selectedText);
				}
			}
						
		]]>
	</mx:Script>
	
  <mx:Canvas width="100%" id="hbHeader" verticalScrollPolicy="off" horizontalScrollPolicy="off">
    <mx:Label id="lblName" text="{data.name}" visible="true" color="gray" textAlign="left" left="0"/>
    <mx:Text id="lblTime" htmlText="{data.time}" textAlign="right"
             visible="true" 
             color="gray" right="4" />
  </mx:Canvas>
  <mx:Text id="txtMessage" htmlText="{data.text}" link="onLinkClick(event)" color="{data.senderColor}"
           keyDown="onKeyDown(event)" paddingLeft="5" width="100%" selectable="true"/>
</mx:VBox>
