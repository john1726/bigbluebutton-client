<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:UIComponent xmlns:mx="http://www.adobe.com/2006/mxml">
	
	<mx:Script>
		<![CDATA[      
			import flash.filters.DropShadowFilter;
			
			// Define a drop shadow for the over and down states.
			[Bindable]
			private var myFilter:DropShadowFilter = new DropShadowFilter(0);
			
			// Define a private var for line weight.
			private var _lineWeight:Number = 1;
			
			// Define public setter and getter for line weight.
			public function get lineWeight():Number
			{
				return _lineWeight;
			}
			
			public function set lineWeight(value:Number):void
			{
				_lineWeight = value;
				invalidateDisplayList();
			}
			
			// Define a private var for the fill color.
			private var _rectFill:uint = 0xE6EEEE;
			
			// Define public setter and getter for fill color.
			public function get rectFill():uint
			{
				return _rectFill;
			}
			
			public function set rectFill(value:uint):void
			{
				_rectFill = value;
				invalidateDisplayList();
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, 
														  unscaledHeight:Number):void
			{
				graphics.lineStyle(lineWeight, 0x0066FF);
				graphics.beginFill(rectFill, 0.50);
				graphics.drawRoundRect(0, 0, unscaledWidth, unscaledHeight, 10, 10);
				filters = [myFilter];
			}                      
		]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="down">
			<mx:SetProperty target="{myFilter}" 
							name="inner" value="true"/>
			<mx:SetProperty target="{myFilter}" 
							name="distance" value="2"/>
		</mx:State>
	</mx:states>    
	
</mx:UIComponent>
