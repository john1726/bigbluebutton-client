<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:mate="http://mate.asfusion.com/"
	styleName="deskshareDefaultButtonStyle"
	height="24"
	toolTip="{ResourceUtil.getInstance().getString('bbb.toolbar.deskshare.toolTip.start')}"
	click="startDeskShare()"
	mouseOver = "mouseOverHandler(event)"
	mouseOut = "mouseOutHandler(event)"
	implements="org.bigbluebutton.common.IBbbToolbarComponent">
	
	<mate:Listener type="{ShortcutEvent.SHARE_DESKTOP}" method="remoteClick" />
	<mate:Listener type="{ShareWindowEvent.CLOSE}" method="closeFocus" />
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import org.bigbluebutton.common.IBbbToolbarComponent;
			import org.bigbluebutton.main.events.ShortcutEvent;
			import org.bigbluebutton.main.views.MainToolbar;
			import org.bigbluebutton.modules.deskshare.events.ShareEvent;
			import org.bigbluebutton.modules.deskshare.events.ShareWindowEvent;
			import org.bigbluebutton.modules.deskshare.events.StopSharingButtonEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			public const OFF_STATE:Number = 0;
			public const ON_STATE:Number = 1;
			
			public const STOP_SHARING:Number = 0;
			public const START_SHARING:Number = 1;
			
			
			private var _currentState:Number = OFF_STATE;
		
			private var dispatcher:Dispatcher = new Dispatcher();
			

			public function deskshareStatus(status:Number):void {
				if(status == START_SHARING) {
					_currentState = ON_STATE;
					this.selected = true;
					this.enabled = true;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.deskshare.toolTip.stop');
          styleName="deskshareOnButtonStyle"
				}
				else {
					_currentState = OFF_STATE;
					this.selected = false;
					this.enabled = true;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.deskshare.toolTip.start');
          styleName="deskshareDefaultButtonStyle"
				}

			}

			public function remoteClick(e:ShortcutEvent):void{
				startDeskShare();
				dispatchEvent(new ShortcutEvent(ShortcutEvent.REMOTE_FOCUS_DESKTOP));
			}

			private function startDeskShare():void {
				if(_currentState == OFF_STATE) {
					this.selected = true;
					this.enabled = true;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.deskshare.toolTip.stop');
          styleName="deskshareOnButtonStyle"
					_currentState = ON_STATE;
					dispatchEvent(new ShareEvent(ShareEvent.START_SHARING));
				}
				else {
					this.selected = false;
					this.enabled = true;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.deskshare.toolTip.start');
          styleName="deskshareDefaultButtonStyle"
					_currentState = ON_STATE;
					var stopSharingButtonEvent:StopSharingButtonEvent = new StopSharingButtonEvent(StopSharingButtonEvent.STOP_SHARING);
					dispatcher.dispatchEvent(stopSharingButtonEvent);
				}
			}
			//OLD - CAN BE DELETED
			public function stopDeskshare():void {
        styleName="deskshareDefaultButtonStyle"
			}

			private function mouseOverHandler(event:MouseEvent):void {
				if(_currentState == ON_STATE)
          styleName="deskshareOffButtonStyle"
				else		
          styleName="deskshareOnButtonStyle"
			}

			private function mouseOutHandler(event:MouseEvent):void {
				if(_currentState == ON_STATE)
        styleName="deskshareOnButtonStyle"
				else	
          styleName="deskshareDefaultButtonStyle"
			}


			
			public function getAlignment():String{
				return MainToolbar.ALIGN_LEFT;
			}
			
			public function theory():String{
				return "Deskshare button";
			}
			
			// Moves focus back to the toolbar button when the desktop sharing window closes, for accessibility
			public function closeFocus(e:ShareWindowEvent):void{
				this.setFocus();
			}
		]]>
	</mx:Script>
</mx:Button>
