<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:mate="http://mate.asfusion.com/"
    creationComplete="onCreationComplete()"
    initialize="init()"
    xmlns:flexlib="http://code.google.com/p/flexlib/"
    width="100%" height="100%" xmlns:containers="flexlib.containers.*"
    verticalScrollPolicy="off" xmlns:common="org.bigbluebutton.common.*">
  
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import flash.accessibility.Accessibility;
			import flash.events.Event;
			import flash.events.FocusEvent;
			import flash.media.Sound;
			
			import flexlib.controls.tabBarClasses.SuperTab;
			import flexlib.events.SuperTabEvent;
			
			import mx.controls.Button;
			import mx.core.INavigatorContent;
			
			import org.bigbluebutton.core.EventConstants;
			import org.bigbluebutton.core.UsersUtil;
			import org.bigbluebutton.core.events.CoreEvent;
			import org.bigbluebutton.main.events.ShortcutEvent;
			import org.bigbluebutton.modules.chat.events.ChatNoiseEnabledEvent;
			import org.bigbluebutton.modules.chat.events.PrivateChatMessageEvent;
			import org.bigbluebutton.modules.chat.events.PublicChatMessageEvent;
			import org.bigbluebutton.modules.chat.model.ChatTimer;
            
			import org.bigbluebutton.util.i18n.ResourceUtil;					

	    private var TIMER_TAB_ID:String = ResourceUtil.getInstance().getString("bbb.chat.timerTabName");
  
	    private var tabBox:AddChatTabBox;
	    private var publicBox:TimerBox;
	    private var focus:Boolean = true;
	    private var focusSwitchTimer:Timer;
	    private var globalDispatcher:Dispatcher = new Dispatcher();
			
      [Bindable] public var chatTimer:ChatTimer;
              
	  
		  private static const PUBLIC_TAB_NEW:String = ResourceUtil.getInstance().getString("bbb.accessibility.chat.chatView.publicTabNew");
		  private var publicWaiting:Boolean = false;
		  private var publicFocus:Boolean = false;
		  private var noticeLabel:String;
		  private var chatNoiseEnabled:Boolean = false;
			
		  [Embed(source="../sounds/notice.mp3")] 
		  private var noticeSoundClass:Class;
		  private var noticeSound:Sound = new noticeSoundClass() as Sound;
		  // All author and license information for the use of this sound can be found in:
		  // src/org/bigbluebutton/modules/chat/sounds/license.txt

			// Initialization
			private function init():void {
                chatTimer  = new ChatTimer();
           
				noticeLabel = ResourceUtil.getInstance().getString('bbb.chat.chatTabs.accessibleNotice');
				// Get the base tab index from config, and add four to make up for the min/max/close buttons and title overlay
			}
			

			private function onCreationComplete():void{								
				ResourceUtil.getInstance().addEventListener(Event.CHANGE, localeChanged); // Listen for locale changing
				
				systemManager.stage.addEventListener(Event.MOUSE_LEAVE, mouseLeave);
				systemManager.stage.addEventListener(Event.ACTIVATE, activate);
				systemManager.stage.addEventListener(Event.DEACTIVATE, deactivate);
			}       
			
			private function localeChanged(e:Event):void{
				setTabTitles();
			}
			
			private function setTabTitles():void {
				TIMER_TAB_ID  = ResourceUtil.getInstance().getString("bbb.chat.timerTabName");				
    

				
				if (tabBox != null) {
					tabBox.id = TIMER_TAB_ID;
					tabBox.label = TIMER_TAB_ID;
					tabBox.name = TIMER_TAB_ID;
				}
				
			}
			      		
			private function mouseLeave(event:Event):void{
				this.focus = false;
			}
			
			private function activate(event:Event):void{
				this.focus = true;
			}
			
			private function deactivate(event:Event):void{
				this.focus = false;
			}
					
			
			
		]]>
	</mx:Script>
	
</mx:VBox>
