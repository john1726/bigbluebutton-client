<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
         xmlns:mate="http://mate.asfusion.com/"
		 xmlns:common="org.bigbluebutton.common.*"
         implements="org.bigbluebutton.modules.chat.views.IChatTab"
         creationComplete="onCreationComplete()">
  
  <mate:Listener type="{LockControlEvent.CHANGED_LOCK_SETTINGS}" method="lockSettingsChanged" />
  
    <mx:Script>
        <![CDATA[
                        import flash.utils.Timer;
                        import flash.events.TimerEvent;

			import com.asfusion.mate.events.Dispatcher;
			
			import mx.collections.ArrayCollection;
			
			import org.as3commons.logging.api.ILogger;
			import org.as3commons.logging.api.getClassLogger;
			import org.bigbluebutton.core.EventConstants;
			import org.bigbluebutton.core.UsersUtil;
			import org.bigbluebutton.core.events.CoreEvent;
			import org.bigbluebutton.core.events.LockControlEvent;
			import org.bigbluebutton.core.managers.UserManager;
			import org.bigbluebutton.main.model.users.BBBUser;
			import org.bigbluebutton.main.model.users.Conference;
			import org.bigbluebutton.modules.chat.events.ChatNoiseEnabledEvent;
			import org.bigbluebutton.modules.chat.events.ChatOptionsEvent;
			import org.bigbluebutton.modules.chat.model.ChatOptions;
			import org.bigbluebutton.util.i18n.ResourceUtil;
            
			private static const LOGGER:ILogger = getClassLogger(AddChatTabBox);      

                        private const TIMER_INTERVAL:int = 10;

                        private var baseTimer:int;

                        private var t:Timer;

			
            [Bindable] public var users:ArrayCollection;
            [Bindable] public var chatView:ChatView;
            [Bindable] private var fontSizes:Array = ['10', '12', '14', '16', '20', '24'];
            
            [Bindable] public var chatOptions:ChatOptions = new ChatOptions();		

            
            private function onCreationComplete():void{
                users = UserManager.getInstance().getConference().users;
                
                if (!chatOptions.privateEnabled) {
                    usersList.includeInLayout = usersList.visible = false;
                }
                
                if (fontSizes.indexOf(chatOptions.fontSize) != -1) {
                    cmbFontSize.selectedItem = chatOptions.fontSize;
                    changeFontSize(); // have to manually call it because the change event doesn't fire
                } else {
                    LOGGER.debug("fontSize in config.xml not found: {0}", [chatOptions.fontSize]);
                }
                chatNoiseCheckBox.selected = Accessibility.active;
                changeChatNoise();

                t = new Timer(TIMER_INTERVAL);
                t.addEventListener(TimerEvent.TIMER, updateTimer);
            }
            
            public function accessibleClick(event:KeyboardEvent):void{
                if (event.keyCode == 32){
                    openPrivateChat(event);
                }
            }
            
            private function changeFontSize():void {
				LOGGER.debug("sending change font size")
                var e:ChatOptionsEvent = new ChatOptionsEvent(ChatOptionsEvent.CHANGE_FONT_SIZE);
                e.fontSize = int(cmbFontSize.selectedItem);
                dispatchEvent(e);
            }
            
            private function changeChatNoise():void {
                LOGGER.debug("changing chat noise, active=" + chatNoiseCheckBox.selected);
                dispatchEvent(new ChatNoiseEnabledEvent(chatNoiseCheckBox.selected));
            }
			
            protected function openPrivateChat(event:Event):void{
                if (usersList.selectedIndex == -1) return;
                
                var chatWithUserID:String = usersList.selectedItem.userID;
                
                // Don't want to be chatting with ourself.
                if (UsersUtil.isMe(chatWithUserID)) return;
                
                usersList.selectedIndex = -1;
                
                var e:CoreEvent = new CoreEvent(EventConstants.START_PRIVATE_CHAT);
                e.message.chatWith = chatWithUserID;
                var gd:Dispatcher = new Dispatcher();
                gd.dispatchEvent(e);
                
            }
            
            /**
            * For the Options tab focus the users list instead of the text area.
            **/
            public function focusToTextMessageArea():void {
              if (usersList.visible) {
                usersList.setFocus();
                usersList.drawFocus(true);
              } else {
                cmbFontSize.setFocus();
                cmbFontSize.drawFocus(true);
              }
            }
          
          private function lockSettingsChanged(e:Event):void {
            
            if (UsersUtil.amIModerator() || UsersUtil.amIPresenter()) return; // Settings only affect viewers.
            
            var userManager:UserManager = UserManager.getInstance();
            var conference:Conference = userManager.getConference();
            var me:BBBUser = conference.getMyUser();
            
            usersList.enabled = !me.disableMyPrivateChat;
          }

            private function updateTimer(evt:TimerEvent):void {
                var d:Date = new Date(getTimer() - baseTimer);
                counter.text = dateFormatter.format(d);
            }

            private function startTimer():void {
                baseTimer = getTimer();
                t.start();
            }

            private function stopTimer():void {
                t.stop();
            }

            
        ]]>
    </mx:Script>
    
	<common:TabIndexer id="tabIndexer" startIndex="1" tabIndices="{[usersList, cmbFontSize, chatNoiseCheckBox]}"/>
    
    <mx:Label id="lblSelect" styleName="chatOptionsLabel"
			  text="{ResourceUtil.getInstance().getString('bbb.chat.privateChatSelect')}" 
			  visible="{chatOptions.privateEnabled}" includeInLayout="{chatOptions.privateEnabled}"/>
    <mx:List id="usersList" height="50%" width="50%" dataProvider="{users}" dragEnabled="false" 
             visible="{chatOptions.privateEnabled}" includeInLayout="{chatOptions.privateEnabled}"
             itemRenderer="org.bigbluebutton.modules.chat.views.UserRenderer"
             labelField="name"
             itemClick="openPrivateChat(event)" 
             toolTip="{ResourceUtil.getInstance().getString('bbb.chat.usersList.toolTip')}"
             accessibilityName="{ResourceUtil.getInstance().getString('bbb.chat.usersList.accessibilityName')}"/>
    <mx:Label styleName="chatOptionsLabel" text="{ResourceUtil.getInstance().getString('bbb.chat.chatOptions')}" />
    <mx:HBox width="100%">
        <mx:Label styleName="chatOptionsLabel" text="{ResourceUtil.getInstance().getString('bbb.chat.fontSize')}" />
        <mx:ComboBox width="60" id="cmbFontSize" dataProvider="{fontSizes}" change="changeFontSize()" 
                     selectedIndex="1" toolTip="{ResourceUtil.getInstance().getString('bbb.chat.cmbFontSize.toolTip')}" />
    </mx:HBox>
	<mx:CheckBox id="chatNoiseCheckBox"  label="{ResourceUtil.getInstance().getString('bbb.accessibility.chat.chatwindow.audibleChatNotification')}" labelPlacement="left" 
				 change="changeChatNoise()" styleName="chatOptionsLabel" />

    <mx:DateFormatter id="dateFormatter" formatString="H:NN:SS" />

    <mx:ApplicationControlBar dock="true">
        <mx:Button label="Start timer" click="startTimer()" />
        <mx:Button label="Stop timer" click="stopTimer()" />
    </mx:ApplicationControlBar>

    <mx:Label id="counter" fontSize="96" />
</mx:VBox>
