<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:mate="http://mate.asfusion.com/"
	icon="{phoneIcon}" click="startSound()" label="BOOO!"
	mouseOver = "mouseOverHandler(event)"
	mouseOut = "mouseOutHandler(event)"
	creationComplete = "initMuteButton()"
	toolTip="{ResourceUtil.getInstance().getString('bbb.toolbar.phone.toolTip.mute')}"
	implements="org.bigbluebutton.common.IBbbToolbarComponent">

	<mate:Listener type="{ShortcutEvent.PAUSE_REMOTE_STREAM}" method="remoteClick" />

	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import org.bigbluebutton.common.IBbbToolbarComponent;
			import org.bigbluebutton.main.events.BBBEvent;
			import org.bigbluebutton.main.events.ShortcutEvent;
			import org.bigbluebutton.main.views.MainToolbar;
			import org.bigbluebutton.modules.phone.views.assets.Images;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			private var images:Images = new Images();
			private var dispatcher:Dispatcher = new Dispatcher();
			private var talking:Boolean = false;

			public const MUTE_STATE:Number = 0;
			public const LISTENING_STATE:Number = 1;
			private var _currentState:Number = LISTENING_STATE;

			[Bindable] public var phoneIcon:Class = images.speakerActiveIcon;

			private function initMuteButton():void {
				this.selected = true;
				this.enabled = true;
				phoneIcon = images.speakerActiveIcon;
			}

			public function remoteClick(event:ShortcutEvent):void{
				startSound();
			}

			private function startSound():void {
				this.enabled = false;
				if (this.selected) {
					muteLocalUser();
					this.selected = false;
					phoneIcon = images.speakerInactiveIcon;
					_currentState = MUTE_STATE;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.phone.toolTip.unmute');
				} else {
					unmuteLocalUser();
					this.selected = true;
					phoneIcon = images.speakerActiveIcon;
					_currentState = LISTENING_STATE;
					this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.phone.toolTip.mute');
				}
			}

			public function muteLocalUser():void {
				var e:BBBEvent = new BBBEvent("MUTE_AUDIO_VOICE_CONFERENCE");
				dispatcher.dispatchEvent(e);
			}

			public function unmuteLocalUser():void {
				var e:BBBEvent = new BBBEvent("UNMUTE_AUDIO_VOICE_CONFERENCE");
				dispatcher.dispatchEvent(e);
			}

			private function mouseOverHandler(event:MouseEvent):void {
				if (_currentState == LISTENING_STATE) {
					phoneIcon = images.speakerInactiveIcon;
				} else {
					phoneIcon = images.speakerActiveIcon;
				}
			}

			private function mouseOutHandler(event:MouseEvent):void {
				if (_currentState == LISTENING_STATE) {
					phoneIcon = images.speakerActiveIcon;
				} else {
					phoneIcon = images.speakerInactiveIcon;
				}
			}

			// For whatever reason the tooltip does not update when localization is changed dynamically. Overrideing it here
			override protected function resourcesChanged():void {
				this.toolTip = ResourceUtil.getInstance().getString('bbb.toolbar.phone.toolTip.start');
			}

			public function getAlignment():String {
				return MainToolbar.ALIGN_LEFT;
			}
		]]>
	</mx:Script>
</mx:Button>
